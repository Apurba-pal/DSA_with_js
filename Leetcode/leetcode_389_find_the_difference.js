// 389. Find the Difference
// Easy
// Topics
// premium lock icon
// Companies
// You are given two strings s and t.

// String t is generated by random shuffling string s and then add one more letter at a random position.

// Return the letter that was added to t.

 

// Example 1:

// Input: s = "abcd", t = "abcde"
// Output: "e"
// Explanation: 'e' is the letter that was added.
// Example 2:

// Input: s = "", t = "y"
// Output: "y"
 

// Constraints:

// 0 <= s.length <= 1000
// t.length == s.length + 1
// s and t consist of lowercase English letters.


// solution 1:



// var findTheDifference = function(s, t) {
//     const map = new Map();

//     for (let char of s) {
//         map.set(char, (map.get(char) || 0) + 1);
//     }

//     for (let char of t) {
//         if (!map.has(char)) return char; // it returns the one which is not in the map
//         map.set(char, map.get(char) - 1);
//         if (map.get(char) < 0) return char; // this returns the one which is there but is present more
//     }
// };



// solution 2:
var findTheDifference = function(s, t) {
    let res = 0;
    for (let char of s) res ^= char.charCodeAt(0);
    for (let char of t) res ^= char.charCodeAt(0);
    return String.fromCharCode(res);
};

// So, XOR cancels out duplicates.


// let res = 0;

// res ^= 'a' (97)
// res ^= 'b' (98)
// res ^= 'c' (99)
// res ^= 'd' (100)

// → res is now: 97 ^ 98 ^ 99 ^ 100

// Now t = "abcde"

// res ^= 'a' (97) → cancels out the earlier 97
// res ^= 'b' (98) → cancels out 98
// res ^= 'c' (99) → cancels out 99
// res ^= 'd' (100) → cancels out 100
// res ^= 'e' (101) → remains!

// Final res = 101 → String.fromCharCode(101) → `"e"`
